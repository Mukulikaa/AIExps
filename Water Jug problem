#include <bits/stdc++.h>
using namespace std;
class nodes{
	public: 
		pair<int,int> p;
		int first;
		int second;
		string s;
};
stringmakestring(inta,int b){
	std::stringstream out1;
	std::stringstream out2;
	string t1,t2,str;
    out1 << a;
    t1 = out1.str();
    out2 << b;
    t2 = out2.str();
str = "("+t1+","+t2+")";
returnstr;
}
int main()
{
	int counter = 0;
ios::sync_with_stdio(false);
    //pair<int,int>cap,ini,final;
nodescap,ini,final;
ini.p.first=0,ini.p.second=0;
ini.s = makestring(ini.p.first,ini.p.second);
cout<<"Enter the capacity of 2 jugs\n";
cin>>cap.p.first>>cap.p.second;
cout<<"Enter the required jug config\n";
cin>>final.p.first>>final.p.second;
queue<nodes> q;
q.push(ini);
nodes jug;
while(!q.empty()){
	jug = q.front();
	if(jug.p.first == final.p.first){// &&jug.p.second == final.p.second){
		cout<<jug.s<<endl;
		// counter++;
		// if(counter==5)
			return 0;
	}
	nodes temp = jug;
	
	if(jug.p.first<cap.p.first){
			temp.p = make_pair(cap.p.first,jug.p.second);
			temp.s = jug.s + makestring(temp.p.first,temp.p.second);
			q.push(temp);
	}
	//Fill 2nd Jug
	if(jug.p.second<cap.p.second){
			temp.p = make_pair(jug.p.first,cap.p.second);
			temp.s = jug.s + makestring(temp.p.first,temp.p.second);
			q.push(temp);
	}
	//Empty 1st Jug
	if(jug.p.first>0){
			temp.p = make_pair(0,jug.p.second);
			temp.s = jug.s + makestring(temp.p.first,temp.p.second);
			q.push(temp);
	}
	//Empty 2nd Jug
	if(jug.p.second>0){
			temp.p = make_pair(jug.p.first,0);
			temp.s = jug.s + makestring(temp.p.first,temp.p.second);
			q.push(temp);
	}
	if(jug.p.first>0 && (jug.p.first+jug.p.second)>=cap.p.second){
		temp.p = make_pair((jug.p.first-(cap.p.second-jug.p.second)),cap.p.second);
		temp.s = jug.s + makestring(temp.p.first,temp.p.second);
		q.push(temp);
	}

	if(jug.p.second>0 && (jug.p.first+jug.p.second)>=cap.p.first){
		temp.p = make_pair(cap.p.first,(jug.p.second-(cap.p.first-jug.p.first)));
		temp.s = jug.s + makestring(temp.p.first,temp.p.second);
		q.push(temp);
	}
	if(jug.p.first>0 && (jug.p.first+jug.p.second)<=cap.p.second){
		temp.p = make_pair(0,jug.p.first+jug.p.second);
		temp.s = jug.s + makestring(temp.p.first,temp.p.second);
		q.push(temp);
	}
	if(jug.p.second>0 && (jug.p.first+jug.p.second)<=cap.p.first){
		temp.p = make_pair(jug.p.first+jug.p.second,0);
		temp.s = jug.s + makestring(temp.p.first,temp.p.second);
		q.push(temp);
	}q.pop();
    }
return 0;}

// input: 5 6   2 0
